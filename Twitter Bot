# -*- coding: utf-8 -*-
"""
Created on Sun Dec 27 15:52:52 2020

@author: Jason
"""

import os
import logging

from  flask import  Flask,  request, make_respose
from  shotgun_api3 import  Shotgun_Task_Chang

app =  Flask(__name__)
sg  = Shotgun(
    os.environ.get('SG_HOST')
    os.environ.get('SG_SCRIPT_NAME')
    os.environ.get('SC_SCRIPT_KEY')
   )


@app.route('/task_status',  methods=['POST'])
def task_status():
    try:
        data = request.get_json()
        event  = data['data']
        sg.set_session_uuid(event['session_uuid'])

def registerCallbacks(reg):
    eventFilter = {'Shotgun_Task_Chang' :  ['sg_status_list']}
    
    reg.registerCallback(
        os.environ["SGDAEMON_TASKSTATUS_NAME"],
        os.environ["SGDAEMON_TASKSTATUS_KEY"],
        taskStatusFlipper,
        eventFilter,
        None,
        )
    
    reg.logger.setLevel(logging.DEBUG)


def taskStatusFlipper(sg, logger, event, args):
    if event['meta']['new_value'] ==  'fin':
        downstream_task = sg.find(
            'Task',
            [['upstream_tasks', 'is', event['entity']]]
            ['sg_status_list']
            )
        
        batch_updates  = [
            {
                "request_type": "update",
                "entity_type": :"Task",
                "entity_id":  task['id'],
                "data": {"sg_status_list":  'rdy'}
            }  for task in  dowstream_tasks
            if task['sg_status_list'] == 'wtg'
            ]
            sg.batch(batch_updates)
